{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\USP\\\\Rocketseat\\\\NLW#5 - React\\\\podcastr-cd6d1925f87dea7fa6f60d76933b0e7a26f7a81c\\\\src\\\\components\\\\Player\\\\index.tsx\";\nimport Image from 'next/image';\nimport { useEffect, useRef, useState } from 'react';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport { usePlayer } from '../../contexts/PlayerContext';\nimport styles from './styles.module.scss';\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\nexport function Player() {\n  var _episode$duration;\n\n  const audioRef = useRef(null);\n  const {\n    0: progress,\n    1: setProgress\n  } = useState(0);\n  const {\n    episodeList,\n    currentEpisodeIndex,\n    isPlaying,\n    isLooping,\n    isShuffling,\n    togglePlay,\n    toggleLoop,\n    toggleShuffle,\n    setPlayingState,\n    playNext,\n    playPrevious,\n    hasNext,\n    hasPrevious\n  } = usePlayer();\n  useEffect(() => {\n    if (!audioRef.current) return;\n\n    if (isPlaying) {\n      audioRef.current.play();\n    } else {\n      audioRef.current.pause();\n    }\n  }, [isPlaying]);\n\n  const setupProgressListener = () => {\n    audioRef.current.currentTime = 0;\n    audioRef.current.addEventListener('timeupdate', () => {\n      setProgress(Math.floor(audioRef.current.currentTime));\n    });\n  };\n\n  const handleSeek = amount => {\n    audioRef.current.currentTime = amount;\n    setProgress(amount);\n  };\n\n  const episode = episodeList[currentEpisodeIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.playerContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/playing.svg\",\n        alt: \"Tocando agora\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Tocando agora\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), episode ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.currentEpisode,\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        width: 592,\n        height: 592,\n        src: episode.thumbnail,\n        objectFit: \"cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: episode.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.members\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.emptyPlayer,\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Selecione um podcast para ouvir\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: !episode ? styles.empty : '',\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.progress,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: convertDurationToTimeString(progress)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.slider,\n          children: episode ? /*#__PURE__*/_jsxDEV(Slider, {\n            max: episode.duration,\n            value: progress,\n            onChange: handleSeek,\n            trackStyle: {\n              backgroundColor: '#04d361'\n            },\n            railStyle: {\n              background: '#9f75ff'\n            },\n            handleStyle: {\n              borderColor: '#04d361',\n              borderWidth: 4\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.empySlider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: convertDurationToTimeString((_episode$duration = episode === null || episode === void 0 ? void 0 : episode.duration) !== null && _episode$duration !== void 0 ? _episode$duration : 0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), episode && /*#__PURE__*/_jsxDEV(\"audio\", {\n        src: episode.url,\n        ref: audioRef,\n        loop: isLooping,\n        autoPlay: true,\n        onEnded: handleEpisodeEnded,\n        onPlay: () => setPlayingState(true),\n        onPause: () => setPlayingState(false),\n        onLoadedMetadata: setupProgressListener\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.buttons,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: toggleShuffle,\n          disabled: !episode || episodeList.length === 1,\n          className: isShuffling ? styles.isActive : \"\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/shuffle.svg\",\n            alt: \"Embaralhar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: playPrevious,\n          disabled: !episode || !hasPrevious,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play-previous.svg\",\n            alt: \"Tocar anterior\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: styles.playButton,\n          disabled: !episode,\n          onClick: togglePlay,\n          children: isPlaying ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/pause.svg\",\n            alt: \"Tocar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play.svg\",\n            alt: \"Tocar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: playNext,\n          disabled: !episode || !hasNext,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play-next.svg\",\n            alt: \"Tocar pr\\xF3xima\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: toggleLoop,\n          disabled: !episode,\n          className: isLooping ? styles.isActive : \"\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/repeat.svg\",\n            alt: \"Repetir\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["C:/USP/Rocketseat/NLW#5 - React/podcastr-cd6d1925f87dea7fa6f60d76933b0e7a26f7a81c/src/components/Player/index.tsx"],"names":["Image","useEffect","useRef","useState","Slider","usePlayer","styles","convertDurationToTimeString","Player","audioRef","progress","setProgress","episodeList","currentEpisodeIndex","isPlaying","isLooping","isShuffling","togglePlay","toggleLoop","toggleShuffle","setPlayingState","playNext","playPrevious","hasNext","hasPrevious","current","play","pause","setupProgressListener","currentTime","addEventListener","Math","floor","handleSeek","amount","episode","playerContainer","currentEpisode","thumbnail","title","members","emptyPlayer","empty","slider","duration","backgroundColor","background","borderColor","borderWidth","empySlider","url","handleEpisodeEnded","buttons","length","isActive","playButton"],"mappings":"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","sourcesContent":["import Image from 'next/image';\nimport { useEffect, useRef, useState } from 'react';\nimport Slider from 'rc-slider';\n\nimport 'rc-slider/assets/index.css';\n\nimport {usePlayer } from '../../contexts/PlayerContext';\n\nimport styles from './styles.module.scss';\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\n\nexport function Player() {\n  const audioRef = useRef<HTMLAudioElement>(null);\n  const [progress, setProgress] = useState(0)\n\n  const { episodeList, \n    currentEpisodeIndex, \n    isPlaying,\n    isLooping,\n    isShuffling,\n    togglePlay,\n    toggleLoop,\n    toggleShuffle,\n    setPlayingState,\n    playNext,\n    playPrevious,\n    hasNext,\n    hasPrevious\n  } = usePlayer()\n\n  useEffect(() => {\n    if(!audioRef.current) return;\n\n    if(isPlaying) {\n      audioRef.current.play()\n    } else {\n      audioRef.current.pause()\n    }\n  }, [isPlaying])\n\n  const setupProgressListener = () => {\n    audioRef.current.currentTime = 0\n\n    audioRef.current.addEventListener('timeupdate', () => {\n      setProgress(Math.floor(audioRef.current.currentTime))\n    })\n  }\n\n  const handleSeek = (amount: number) => {\n    audioRef.current.currentTime = amount\n    setProgress(amount)\n  }\n\n  const episode = episodeList[currentEpisodeIndex];\n \n  return (\n    <div className={styles.playerContainer}>\n      <header>\n        <img src=\"/playing.svg\" alt=\"Tocando agora\"/>\n        <strong>Tocando agora</strong>\n      </header>\n\n      { episode ? (\n        <div className={styles.currentEpisode}>\n        <Image \n          width={592}\n          height={592}\n          src={episode.thumbnail}\n          objectFit=\"cover\"\n        />\n        <strong>{episode.title}</strong>\n        <span>{episode.members}</span>\n      </div>\n      ) : (\n        <div className={styles.emptyPlayer}>\n        <strong>Selecione um podcast para ouvir</strong>\n      </div>\n      )}\n\n      <footer className={!episode ? styles.empty : ''}>\n        <div className={styles.progress}>\n        <span>{convertDurationToTimeString(progress)}</span>\n        <div className={styles.slider}>\n          { episode ? (\n            <Slider \n              max={episode.duration}\n              value={progress}\n              onChange={handleSeek}\n              trackStyle={{ backgroundColor: '#04d361'}}\n              railStyle={{ background: '#9f75ff' }}\n              handleStyle={{ borderColor: '#04d361', borderWidth: 4 }}\n            />\n          ) : (\n            <div className={styles.empySlider} />\n          )}\n          </div>\n          <span>{convertDurationToTimeString(episode?.duration ?? 0)}</span>\n        </div>\n\n        { episode && (\n          <audio\n            src={episode.url}\n            ref={audioRef}\n            loop={isLooping}\n            autoPlay\n            onEnded={handleEpisodeEnded}\n            onPlay={() => setPlayingState(true)}\n            onPause={() => setPlayingState(false)}\n            onLoadedMetadata={setupProgressListener}\n          />\n        )}\n\n        <div className={styles.buttons}>\n          <button \n            type=\"button\" \n            onClick={toggleShuffle}\n            disabled={!episode || episodeList.length===1}\n            className={isShuffling ? styles.isActive : \"\"}\n          >\n            <img src=\"/shuffle.svg\" alt=\"Embaralhar\"/>\n          </button>\n          <button type=\"button\" onClick={playPrevious} disabled={!episode || !hasPrevious}>\n            <img src=\"/play-previous.svg\" alt=\"Tocar anterior\"/>\n          </button>\n          <button \n            type=\"button\" \n            className={styles.playButton} \n            disabled={!episode}\n            onClick={togglePlay}\n          >\n            { isPlaying \n              ? <img src=\"/pause.svg\" alt=\"Tocar\"/>\n              : <img src=\"/play.svg\" alt=\"Tocar\"/>\n            }\n          </button>\n          <button type=\"button\" onClick={playNext} disabled={!episode || !hasNext}>\n            <img src=\"/play-next.svg\" alt=\"Tocar próxima\"/>\n          </button>\n          <button \n            type=\"button\" \n            onClick={toggleLoop}\n            disabled={!episode}\n            className={isLooping ? styles.isActive : \"\"}\n          >\n            <img src=\"/repeat.svg\" alt=\"Repetir\"/>\n          </button>\n        </div>\n      </footer>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}